openapi: 3.0.1
servers:
  - description: 로컬 서버
    url: localhost:8080
info:
  description: Closest의 API 명세서입니다.
  version: 0.0.1
  title: Cloest API Specification
tags:
  - name: subscriptions
    description: 구독 관리
  - name: blogs
    description: 블로그 관리
paths:
  /subscriptions/blogs:
    get:
      tags:
        - subscriptions
      summary: 사용자는 구독한 블로그 목록을 요청
      responses:
        "200":
          description: 구독한 블로그 정보 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscribedBlog'
        "400":
          description: 구독 정보가 존재하지 않음
        "500":
          description: 서버 에러
        "502":
          description: RSS 서버 에러

  /subscriptions/{subscriptionsId}:
    delete:
      tags:
        - subscriptions
      summary: 사용자가 특정 블로그 구독 해지 요청
      description: 구독 정보 키로 사용자와 블로그 연관관계 삭제
      parameters:
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 구독 해지 성공
        "403":
          description: 요청한 사용자 정보가 구독 정보와 일치하지 않음
        "404":
          description: 해당 구독을 찾을 수 없음
        "500":
          description: 서버 에러

  /subscriptions/{subscriptionsId}/visit:
    patch:
      tags:
        - subscriptions
      summary: 구독한 블로그 방문 및 조회수 증가
      description: 구독한 블로그는 새창으로 띄우고 해당 구독 정보에 조회수를 1 증가시킨다
      parameters:
        - in: path
          name: subscriptionsId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 블로그 방문 성공 및 조회수 증가
        "403":
          description: 요청한 사용자 정보가 구독 정보와 일치하지 않음
        "404":
          description: 블로그를 찾을 수 없음
        "500":
          description: 서버 에러

  /blogs/status/my:
    put:
      tags:
        - blogs
      summary: 자신의 블로그에 다른 유저들이 볼 수 있는 상태 메시지 설정. (변경의 여지가 있다)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        "200":
          description: 상태 메시지 생성 성공
        "400":
          description: 올바르지 않은 요청
        "403":
          description: 요청한 사용자 정보가 블로그 정보와 일치하지 않음
        "500":
          description: 서버 에러

  /blogs/posts/{postsId}/like:
    post:
      tags:
        - blogs
      summary: 사용자는 블로그 포스트에 좋아요 생성
      parameters:
        - in: path
          name: postsId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 좋아요 생성 성공
        "404":
          description: 포스트를 찾을 수 없음
        "500":
          description: 서버 에러

  /blog/auth/message:
    get:
      tags:
        - blogs
      summary: 블로그 인증 메시지 생성
      description: 블로그 인증을 위해 랜덤 메시지 생성 요청
      parameters:
        - in: query
          name: url
          required: true
          schema:
            type: string
            format: uri
      responses:
        "200":
          description: 메시지 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  authMessage:
                    type: string
                    example: "AB12CD34EF56"
        "500":
          description: 서버 에러

  /blog/auth/verification:
    post:
      tags:
        - blogs
      summary: 블로그 인증 요청
      description: 본인 블로그 구독한 사람을 추적하거나 본인의 블로그에 해당하는 좋아하는 것 추적하기 위해. 나의 블로그를 구독한 사람들에 대한 기능을 만들기 어렵다. 나의 블로그임을 입증한다. 상태메세지나 나를 구독한 사람을 알기 위해서 필요.
      requestBody:
        description: 인증을 위한 URL 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  example: "https://example.com/myblog"
      responses:
        "200":
          description: 인증 요청 성공
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러
components:
  schemas:
    SubscribedBlog:
      type: object
      properties:
        subscriptionId:
          type: integer
          example: 1
        intimacyRank:
          type: integer
          example: 2
        nickName:
          type: string
          example: 개발자123
        url:
          type: string
          example: https://example.com/blog1
        newPostsCnt:
          type: integer
          example: 5
